use "std.dl";

/* Standard recursive fibonacci definition */
let fibo <- { x |
	if (x == 0)
	{ t | 1; }
	{ f | if (x == 1)
		{ t | 1; }
		{ f | fibo (x - 1) + fibo (x - 2); };
	};
};

/* Prettier, less deeply recursive fibonacci */
let flatfibo <- { x |
   let fib <- { x a b |
      if (x == 0)
      { t | a; }
      { f | fib (x - 1) b (a + b); };
   };
   fib x 1 1;
};

/*
let fibo_cond { x |
    cond
    | x == 0 : 1;
    | x == 1 : 1;
    | otherwise : fibo_cond (x - 1) + fibo_cond (x - 2);
    end;
};
*/           

/* Test for scope */
let a <- "outer";
let f! <- { ! |
	let showA! <- { ! | print! a; };
	showA!;
	let a <- "inner";
	showA!;
};

let odd <- { x | if (x == 0) { t | 0; } { f | even (x - 1); }; },
    even <- { x | if (x == 0) { t | 1; } { f | odd (x - 1); }; }; 
