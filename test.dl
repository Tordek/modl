use "std.dl";

/* Standard recursive fibonacci definition */
let fibo <- { x |
    cond
    | x == 0 -> 1;
    | x == 1 -> 1;
    | otherwise -> fibo (x - 1) + fibo (x - 2);
    end;
};


/* Prettier, less deeply recursive fibonacci */
let flatfibo <- { x |
   let fib <- { x a b |
      cond
      | x == 0 -> a;
      | otherwise -> fib (x - 1) b (a + b);
      end;
   };
   fib x 1 1;
};

/* Test for scope */
let a <- "outer";
let f! <- { ! |
	let showA! <- { ! | print! a; };
	showA!;
	let a <- "inner";
	showA!;
};

/* Mutual recursion */
let odd <- { x |
        cond
        | (x == 0) -> 0;
        | otherwise -> even (x - 1);
        end;
    },
    even <- { x | 
        cond
        | (x == 0) -> 1;
        | otherwise -> odd (x - 1);
        end;
    };
